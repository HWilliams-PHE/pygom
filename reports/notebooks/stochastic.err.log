Traceback (most recent call last):
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\nbclient\client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\jupyter_core\utils\__init__.py", line 160, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\asyncio\base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\nbclient\client.py", line 648, in async_setup_kernel
    yield
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\nbclient\client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\nbclient\client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Hannah.Williams\.conda\envs\pygom-dev\Lib\site-packages\nbclient\client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from pygom import SimulateOde, Transition, TransitionType

import matplotlib.pyplot as plt

import numpy as np

# initial conditions
Ix0 = [1, 1.27e-6, 0]

# time period
t = np.linspace(0, 150, 100)

stateList = ['S', 'I', 'R']

paramList = ['beta', 'gamma']

transitionList = [Transition(origin='S', destination='I', equation='beta*S*I', transition_type=TransitionType.T), 
                  Transition(origin='I', destination='R', equation='gamma*I', transition_type=TransitionType.T)]

# create the ODEs
odeS = SimulateOde(stateList, paramList, transition=transitionList)

# assign parameter values
odeS.parameters = [0.5, 1.0/3.0]

# assign initial values
odeS.initial_values = (Ix0, t[0])

# solve deterministic solution
solutionReference = odeS.integrate(t[1::], full_output=False)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 1[0m
[1;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpygom[39;00m [38;5;28;01mimport[39;00m SimulateOde, Transition, TransitionType
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m

[1;31mModuleNotFoundError[0m: No module named 'pygom'
ModuleNotFoundError: No module named 'pygom'

